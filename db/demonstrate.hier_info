|demonstrate
clk => clk.IN6
reset_n => reset_n.IN5
SDO => SDO.IN1
CS_n << LTC231512:lt1.CS_n
SCK << LTC231512:lt1.SCK
rs_tx << my_uart_tx:i_my_uart_tx.rs_tx
tx_1452 << max1452_top:max1452.rs_tx
flag => flag.IN1
F1_8ADD_A << switch:i_switch.F1_8ADD_A
F1_8ADD_B << switch:i_switch.F1_8ADD_B
F1_8ADD_C << switch:i_switch.F1_8ADD_C
F2_8ADD_A << switch:i_switch.F2_8ADD_A
F2_8ADD_B << switch:i_switch.F2_8ADD_B
F2_8ADD_C << switch:i_switch.F2_8ADD_C
F3_8ADD_A << switch:i_switch.F3_8ADD_A
F3_8ADD_B << switch:i_switch.F3_8ADD_B
F3_8ADD_C << switch:i_switch.F3_8ADD_C
unlock << max1452_top:max1452.unlock


|demonstrate|LTC231512:lt1
clk_50M => data_out_buf[0].CLK
clk_50M => data_out_buf[1].CLK
clk_50M => data_out_buf[2].CLK
clk_50M => data_out_buf[3].CLK
clk_50M => data_out_buf[4].CLK
clk_50M => data_out_buf[5].CLK
clk_50M => data_out_buf[6].CLK
clk_50M => data_out_buf[7].CLK
clk_50M => data_out_buf[8].CLK
clk_50M => data_out_buf[9].CLK
clk_50M => data_out_buf[10].CLK
clk_50M => data_out_buf[11].CLK
clk_50M => data[0].CLK
clk_50M => data[1].CLK
clk_50M => data[2].CLK
clk_50M => data[3].CLK
clk_50M => data[4].CLK
clk_50M => data[5].CLK
clk_50M => data[6].CLK
clk_50M => data[7].CLK
clk_50M => data[8].CLK
clk_50M => data[9].CLK
clk_50M => data[10].CLK
clk_50M => data[11].CLK
clk_50M => SCK_buf.CLK
clk_50M => CS_n~reg0.CLK
clk_50M => cnt[0].CLK
clk_50M => cnt[1].CLK
clk_50M => cnt[2].CLK
clk_50M => cnt[3].CLK
clk_50M => cnt[4].CLK
clk_50M => cnt[5].CLK
reset_n => data_out_buf[0].ACLR
reset_n => data_out_buf[1].ACLR
reset_n => data_out_buf[2].ACLR
reset_n => data_out_buf[3].ACLR
reset_n => data_out_buf[4].ACLR
reset_n => data_out_buf[5].ACLR
reset_n => data_out_buf[6].ACLR
reset_n => data_out_buf[7].ACLR
reset_n => data_out_buf[8].ACLR
reset_n => data_out_buf[9].ACLR
reset_n => data_out_buf[10].ACLR
reset_n => data_out_buf[11].ACLR
reset_n => CS_n~reg0.PRESET
reset_n => SCK_buf.ACLR
reset_n => cnt[0].ACLR
reset_n => cnt[1].ACLR
reset_n => cnt[2].ACLR
reset_n => cnt[3].ACLR
reset_n => cnt[4].ACLR
reset_n => cnt[5].ACLR
reset_n => data[0].ACLR
reset_n => data[1].ACLR
reset_n => data[2].ACLR
reset_n => data[3].ACLR
reset_n => data[4].ACLR
reset_n => data[5].ACLR
reset_n => data[6].ACLR
reset_n => data[7].ACLR
reset_n => data[8].ACLR
reset_n => data[9].ACLR
reset_n => data[10].ACLR
reset_n => data[11].ACLR
SDO => Selector0.IN4
SDO => Selector1.IN4
SDO => Selector2.IN4
SDO => Selector3.IN4
SDO => Selector4.IN4
SDO => Selector5.IN4
SDO => Selector6.IN4
SDO => Selector7.IN4
SDO => Selector8.IN4
SDO => Selector9.IN4
SDO => Selector10.IN4
SDO => Selector11.IN4
CS_n <= CS_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
SCK <= SCK_buf.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out_buf[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out_buf[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out_buf[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out_buf[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out_buf[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out_buf[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out_buf[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out_buf[7].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out_buf[8].DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out_buf[9].DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out_buf[10].DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out_buf[11].DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|switch:i_switch
clk => F3_8ADD[0].CLK
clk => F3_8ADD[1].CLK
clk => F3_8ADD[2].CLK
clk => F2_8ADD[0].CLK
clk => F2_8ADD[1].CLK
clk => F2_8ADD[2].CLK
clk => F1_8ADD[0].CLK
clk => F1_8ADD[1].CLK
clk => F1_8ADD[2].CLK
addr[0] => Decoder0.IN5
addr[1] => Decoder0.IN4
addr[2] => Decoder0.IN3
addr[3] => Decoder0.IN2
addr[4] => Decoder0.IN1
addr[5] => Decoder0.IN0
F1_8ADD_A <= F1_8ADD[0].DB_MAX_OUTPUT_PORT_TYPE
F1_8ADD_B <= F1_8ADD[1].DB_MAX_OUTPUT_PORT_TYPE
F1_8ADD_C <= F1_8ADD[2].DB_MAX_OUTPUT_PORT_TYPE
F2_8ADD_A <= F2_8ADD[0].DB_MAX_OUTPUT_PORT_TYPE
F2_8ADD_B <= F2_8ADD[1].DB_MAX_OUTPUT_PORT_TYPE
F2_8ADD_C <= F2_8ADD[2].DB_MAX_OUTPUT_PORT_TYPE
F3_8ADD_A <= F3_8ADD[0].DB_MAX_OUTPUT_PORT_TYPE
F3_8ADD_B <= F3_8ADD[1].DB_MAX_OUTPUT_PORT_TYPE
F3_8ADD_C <= F3_8ADD[2].DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|switch_ctrl:i_switch_ctrl
clk => CS~1.DATAIN
reset_n => CS~3.DATAIN
flag => NS.s_start.DATAB
flag => Selector0.IN0
data_out[0] => ~NO_FANOUT~
data_out[1] => ~NO_FANOUT~
data_out[2] => ~NO_FANOUT~
data_out[3] => ~NO_FANOUT~
data_out[4] => ~NO_FANOUT~
data_out[5] => ~NO_FANOUT~
data_out[6] => ~NO_FANOUT~
data_out[7] => ~NO_FANOUT~
addr[0] <= <GND>
addr[1] <= <GND>
addr[2] <= <GND>
addr[3] <= <GND>
addr[4] <= <GND>
rdreq => ~NO_FANOUT~
empty <= <GND>
full <= <GND>
q[0] <= <GND>
q[1] <= <GND>
q[2] <= <GND>
q[3] <= <GND>
q[4] <= <GND>
q[5] <= <GND>
q[6] <= <GND>
q[7] <= <GND>


|demonstrate|speed_select:i_speed_select
clk => clk_bps_r.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => clk_bps_r.ACLR
clk_bps <= clk_bps_r.DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|my_uart_tx:i_my_uart_tx
clk => rs232_tx_r.CLK
clk => num[0].CLK
clk => num[1].CLK
clk => num[2].CLK
clk => num[3].CLK
clk => tx_en.CLK
clk => tx_data[0].CLK
clk => tx_data[1].CLK
clk => tx_data[2].CLK
clk => tx_data[3].CLK
clk => tx_data[4].CLK
clk => tx_data[5].CLK
clk => tx_data[6].CLK
clk => tx_data[7].CLK
clk => rd_en~reg0.CLK
clk => wait_cnt[0].CLK
clk => wait_cnt[1].CLK
clk => wait_cnt[2].CLK
clk => wait_cnt[3].CLK
clk => wait_cnt[4].CLK
clk => wait_cnt[5].CLK
clk => wait_cnt[6].CLK
clk => wait_cnt[7].CLK
clk => wait_cnt[8].CLK
clk => wait_cnt[9].CLK
clk => wait_cnt[10].CLK
clk => wait_cnt[11].CLK
clk => wait_cnt[12].CLK
clk => wait_cnt[13].CLK
clk => wait_cnt[14].CLK
clk => wait_cnt[15].CLK
clk => wait_cnt[16].CLK
clk => wait_cnt[17].CLK
clk => wait_cnt[18].CLK
clk => wait_cnt[19].CLK
clk => wait_cnt[20].CLK
clk => wait_cnt[21].CLK
clk => wait_cnt[22].CLK
clk => wait_cnt[23].CLK
clk => wait_cnt[24].CLK
clk => wait_cnt[25].CLK
clk => wait_cnt[26].CLK
clk => wait_cnt[27].CLK
clk => wait_cnt[28].CLK
clk => wait_cnt[29].CLK
clk => wait_cnt[30].CLK
clk => wait_cnt[31].CLK
clk => state~1.DATAIN
rst_n => wait_cnt[0].ACLR
rst_n => wait_cnt[1].ACLR
rst_n => wait_cnt[2].ACLR
rst_n => wait_cnt[3].ACLR
rst_n => wait_cnt[4].ACLR
rst_n => wait_cnt[5].ACLR
rst_n => wait_cnt[6].ACLR
rst_n => wait_cnt[7].ACLR
rst_n => wait_cnt[8].ACLR
rst_n => wait_cnt[9].ACLR
rst_n => wait_cnt[10].ACLR
rst_n => wait_cnt[11].ACLR
rst_n => wait_cnt[12].ACLR
rst_n => wait_cnt[13].ACLR
rst_n => wait_cnt[14].ACLR
rst_n => wait_cnt[15].ACLR
rst_n => wait_cnt[16].ACLR
rst_n => wait_cnt[17].ACLR
rst_n => wait_cnt[18].ACLR
rst_n => wait_cnt[19].ACLR
rst_n => wait_cnt[20].ACLR
rst_n => wait_cnt[21].ACLR
rst_n => wait_cnt[22].ACLR
rst_n => wait_cnt[23].ACLR
rst_n => wait_cnt[24].ACLR
rst_n => wait_cnt[25].ACLR
rst_n => wait_cnt[26].ACLR
rst_n => wait_cnt[27].ACLR
rst_n => wait_cnt[28].ACLR
rst_n => wait_cnt[29].ACLR
rst_n => wait_cnt[30].ACLR
rst_n => wait_cnt[31].ACLR
rst_n => rs232_tx_r.PRESET
rst_n => num[0].ACLR
rst_n => num[1].ACLR
rst_n => num[2].ACLR
rst_n => num[3].ACLR
rst_n => tx_data[0].ACLR
rst_n => tx_data[1].ACLR
rst_n => tx_data[2].ACLR
rst_n => tx_data[3].ACLR
rst_n => tx_data[4].ACLR
rst_n => tx_data[5].ACLR
rst_n => tx_data[6].ACLR
rst_n => tx_data[7].ACLR
rst_n => tx_en.ACLR
rst_n => state~3.DATAIN
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => rs232_tx_r.OUTPUTSELECT
rd_data[0] => tx_data[0].DATAIN
rd_data[1] => tx_data[1].DATAIN
rd_data[2] => tx_data[2].DATAIN
rd_data[3] => tx_data[3].DATAIN
rd_data[4] => tx_data[4].DATAIN
rd_data[5] => tx_data[5].DATAIN
rd_data[6] => tx_data[6].DATAIN
rd_data[7] => tx_data[7].DATAIN
rd_en <= rd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty => Selector0.IN3
empty => state.DATAB
rs_tx <= rs232_tx_r.DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|max1452_top:max1452
clk => clk.IN2
rst_n => rst_n.IN2
rs_tx <= my_uart_tx:my_uart_tx.rs_tx
unlock <= <VCC>


|demonstrate|max1452_top:max1452|speed_select:speed_select
clk => clk_bps_r.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => clk_bps_r.ACLR
clk_bps <= clk_bps_r.DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|max1452_top:max1452|my_uart_tx:my_uart_tx
clk => rs232_tx_r.CLK
clk => num[0].CLK
clk => num[1].CLK
clk => num[2].CLK
clk => num[3].CLK
clk => tx_en.CLK
clk => tx_data[0].CLK
clk => tx_data[1].CLK
clk => tx_data[2].CLK
clk => tx_data[3].CLK
clk => tx_data[4].CLK
clk => tx_data[5].CLK
clk => tx_data[6].CLK
clk => tx_data[7].CLK
clk => rd_en~reg0.CLK
clk => wait_cnt[0].CLK
clk => wait_cnt[1].CLK
clk => wait_cnt[2].CLK
clk => wait_cnt[3].CLK
clk => wait_cnt[4].CLK
clk => wait_cnt[5].CLK
clk => wait_cnt[6].CLK
clk => wait_cnt[7].CLK
clk => wait_cnt[8].CLK
clk => wait_cnt[9].CLK
clk => wait_cnt[10].CLK
clk => wait_cnt[11].CLK
clk => wait_cnt[12].CLK
clk => wait_cnt[13].CLK
clk => wait_cnt[14].CLK
clk => wait_cnt[15].CLK
clk => wait_cnt[16].CLK
clk => wait_cnt[17].CLK
clk => wait_cnt[18].CLK
clk => wait_cnt[19].CLK
clk => wait_cnt[20].CLK
clk => wait_cnt[21].CLK
clk => wait_cnt[22].CLK
clk => wait_cnt[23].CLK
clk => wait_cnt[24].CLK
clk => wait_cnt[25].CLK
clk => wait_cnt[26].CLK
clk => wait_cnt[27].CLK
clk => wait_cnt[28].CLK
clk => wait_cnt[29].CLK
clk => wait_cnt[30].CLK
clk => wait_cnt[31].CLK
clk => state~1.DATAIN
rst_n => wait_cnt[0].ACLR
rst_n => wait_cnt[1].ACLR
rst_n => wait_cnt[2].ACLR
rst_n => wait_cnt[3].ACLR
rst_n => wait_cnt[4].ACLR
rst_n => wait_cnt[5].ACLR
rst_n => wait_cnt[6].ACLR
rst_n => wait_cnt[7].ACLR
rst_n => wait_cnt[8].ACLR
rst_n => wait_cnt[9].ACLR
rst_n => wait_cnt[10].ACLR
rst_n => wait_cnt[11].ACLR
rst_n => wait_cnt[12].ACLR
rst_n => wait_cnt[13].ACLR
rst_n => wait_cnt[14].ACLR
rst_n => wait_cnt[15].ACLR
rst_n => wait_cnt[16].ACLR
rst_n => wait_cnt[17].ACLR
rst_n => wait_cnt[18].ACLR
rst_n => wait_cnt[19].ACLR
rst_n => wait_cnt[20].ACLR
rst_n => wait_cnt[21].ACLR
rst_n => wait_cnt[22].ACLR
rst_n => wait_cnt[23].ACLR
rst_n => wait_cnt[24].ACLR
rst_n => wait_cnt[25].ACLR
rst_n => wait_cnt[26].ACLR
rst_n => wait_cnt[27].ACLR
rst_n => wait_cnt[28].ACLR
rst_n => wait_cnt[29].ACLR
rst_n => wait_cnt[30].ACLR
rst_n => wait_cnt[31].ACLR
rst_n => rs232_tx_r.PRESET
rst_n => num[0].ACLR
rst_n => num[1].ACLR
rst_n => num[2].ACLR
rst_n => num[3].ACLR
rst_n => tx_data[0].ACLR
rst_n => tx_data[1].ACLR
rst_n => tx_data[2].ACLR
rst_n => tx_data[3].ACLR
rst_n => tx_data[4].ACLR
rst_n => tx_data[5].ACLR
rst_n => tx_data[6].ACLR
rst_n => tx_data[7].ACLR
rst_n => tx_en.ACLR
rst_n => state~3.DATAIN
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => rs232_tx_r.OUTPUTSELECT
rd_data[0] => tx_data[0].DATAIN
rd_data[1] => tx_data[1].DATAIN
rd_data[2] => tx_data[2].DATAIN
rd_data[3] => tx_data[3].DATAIN
rd_data[4] => tx_data[4].DATAIN
rd_data[5] => tx_data[5].DATAIN
rd_data[6] => tx_data[6].DATAIN
rd_data[7] => tx_data[7].DATAIN
rd_en <= rd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty => Selector0.IN3
empty => state.DATAB
rs_tx <= rs232_tx_r.DB_MAX_OUTPUT_PORT_TYPE


