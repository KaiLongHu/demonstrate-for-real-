|demonstrate
clk => clk.IN6
reset_n => reset_n.IN5
SDO => SDO.IN1
CS_n << LTC231512:lt1.CS_n
SCK << LTC231512:lt1.SCK
rs_tx << my_uart_tx:i_my_uart_tx.rs_tx
tx_1452 << max1452_top:max1452.rs_tx
flag => flag.IN1
F1_8ADD_A << switch:i_switch.F1_8ADD_A
F1_8ADD_B << switch:i_switch.F1_8ADD_B
F1_8ADD_C << switch:i_switch.F1_8ADD_C
F2_8ADD_A << switch:i_switch.F2_8ADD_A
F2_8ADD_B << switch:i_switch.F2_8ADD_B
F2_8ADD_C << switch:i_switch.F2_8ADD_C
F3_8ADD_A << switch:i_switch.F3_8ADD_A
F3_8ADD_B << switch:i_switch.F3_8ADD_B
F3_8ADD_C << switch:i_switch.F3_8ADD_C
unlock << max1452_top:max1452.unlock
SSSS[0] << switch_ctrl:i_switch_ctrl.SS_state
SSSS[1] << <GND>
SSSS[2] << <GND>
SSSS[3] << <GND>


|demonstrate|LTC231512:lt1
clk_50M => data_out_buf[0].CLK
clk_50M => data_out_buf[1].CLK
clk_50M => data_out_buf[2].CLK
clk_50M => data_out_buf[3].CLK
clk_50M => data_out_buf[4].CLK
clk_50M => data_out_buf[5].CLK
clk_50M => data_out_buf[6].CLK
clk_50M => data_out_buf[7].CLK
clk_50M => data_out_buf[8].CLK
clk_50M => data_out_buf[9].CLK
clk_50M => data_out_buf[10].CLK
clk_50M => data_out_buf[11].CLK
clk_50M => data[0].CLK
clk_50M => data[1].CLK
clk_50M => data[2].CLK
clk_50M => data[3].CLK
clk_50M => data[4].CLK
clk_50M => data[5].CLK
clk_50M => data[6].CLK
clk_50M => data[7].CLK
clk_50M => data[8].CLK
clk_50M => data[9].CLK
clk_50M => data[10].CLK
clk_50M => data[11].CLK
clk_50M => SCK_buf.CLK
clk_50M => CS_n~reg0.CLK
clk_50M => cnt[0].CLK
clk_50M => cnt[1].CLK
clk_50M => cnt[2].CLK
clk_50M => cnt[3].CLK
clk_50M => cnt[4].CLK
clk_50M => cnt[5].CLK
reset_n => data_out_buf[0].ACLR
reset_n => data_out_buf[1].ACLR
reset_n => data_out_buf[2].ACLR
reset_n => data_out_buf[3].ACLR
reset_n => data_out_buf[4].ACLR
reset_n => data_out_buf[5].ACLR
reset_n => data_out_buf[6].ACLR
reset_n => data_out_buf[7].ACLR
reset_n => data_out_buf[8].ACLR
reset_n => data_out_buf[9].ACLR
reset_n => data_out_buf[10].ACLR
reset_n => data_out_buf[11].ACLR
reset_n => CS_n~reg0.PRESET
reset_n => SCK_buf.ACLR
reset_n => cnt[0].ACLR
reset_n => cnt[1].ACLR
reset_n => cnt[2].ACLR
reset_n => cnt[3].ACLR
reset_n => cnt[4].ACLR
reset_n => cnt[5].ACLR
reset_n => data[0].ACLR
reset_n => data[1].ACLR
reset_n => data[2].ACLR
reset_n => data[3].ACLR
reset_n => data[4].ACLR
reset_n => data[5].ACLR
reset_n => data[6].ACLR
reset_n => data[7].ACLR
reset_n => data[8].ACLR
reset_n => data[9].ACLR
reset_n => data[10].ACLR
reset_n => data[11].ACLR
SDO => Selector0.IN4
SDO => Selector1.IN4
SDO => Selector2.IN4
SDO => Selector3.IN4
SDO => Selector4.IN4
SDO => Selector5.IN4
SDO => Selector6.IN4
SDO => Selector7.IN4
SDO => Selector8.IN4
SDO => Selector9.IN4
SDO => Selector10.IN4
SDO => Selector11.IN4
CS_n <= CS_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
SCK <= SCK_buf.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out_buf[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out_buf[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out_buf[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out_buf[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out_buf[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out_buf[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out_buf[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out_buf[7].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out_buf[8].DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out_buf[9].DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out_buf[10].DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out_buf[11].DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|switch:i_switch
clk => F3_8ADD[0].CLK
clk => F3_8ADD[1].CLK
clk => F3_8ADD[2].CLK
clk => F2_8ADD[0].CLK
clk => F2_8ADD[1].CLK
clk => F2_8ADD[2].CLK
clk => F1_8ADD[0].CLK
clk => F1_8ADD[1].CLK
clk => F1_8ADD[2].CLK
addr[0] => ~NO_FANOUT~
addr[1] => ~NO_FANOUT~
addr[2] => ~NO_FANOUT~
addr[3] => ~NO_FANOUT~
addr[4] => ~NO_FANOUT~
addr[5] => ~NO_FANOUT~
F1_8ADD_A <= F1_8ADD[0].DB_MAX_OUTPUT_PORT_TYPE
F1_8ADD_B <= F1_8ADD[1].DB_MAX_OUTPUT_PORT_TYPE
F1_8ADD_C <= F1_8ADD[2].DB_MAX_OUTPUT_PORT_TYPE
F2_8ADD_A <= F2_8ADD[0].DB_MAX_OUTPUT_PORT_TYPE
F2_8ADD_B <= F2_8ADD[1].DB_MAX_OUTPUT_PORT_TYPE
F2_8ADD_C <= F2_8ADD[2].DB_MAX_OUTPUT_PORT_TYPE
F3_8ADD_A <= F3_8ADD[0].DB_MAX_OUTPUT_PORT_TYPE
F3_8ADD_B <= F3_8ADD[1].DB_MAX_OUTPUT_PORT_TYPE
F3_8ADD_C <= F3_8ADD[2].DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|switch_ctrl:i_switch_ctrl
clk => clk.IN1
reset_n => delay_cnt[0].ACLR
reset_n => delay_cnt[1].ACLR
reset_n => delay_cnt[2].ACLR
reset_n => delay_cnt[3].ACLR
reset_n => delay_cnt[4].ACLR
reset_n => delay_cnt[5].ACLR
reset_n => delay_cnt[6].ACLR
reset_n => delay_cnt[7].ACLR
reset_n => delay_cnt[8].ACLR
reset_n => delay_cnt[9].ACLR
reset_n => delay_cnt[10].ACLR
reset_n => delay_cnt[11].ACLR
reset_n => delay_cnt[12].ACLR
reset_n => delay_cnt[13].ACLR
reset_n => delay_cnt[14].ACLR
reset_n => delay_cnt[15].ACLR
reset_n => delay_cnt[16].ACLR
reset_n => delay_cnt[17].ACLR
reset_n => delay_cnt[18].ACLR
reset_n => delay_cnt[19].ACLR
reset_n => delay_cnt[20].ACLR
reset_n => delay_cnt[21].ACLR
reset_n => delay_cnt[22].ACLR
reset_n => delay_cnt[23].ACLR
reset_n => delay_cnt[24].ACLR
reset_n => delay_cnt[25].ACLR
reset_n => delay_cnt[26].ACLR
reset_n => delay_cnt[27].ACLR
reset_n => delay_cnt[28].ACLR
reset_n => delay_cnt[29].ACLR
reset_n => delay_cnt[30].ACLR
reset_n => delay_cnt[31].ACLR
reset_n => address[0].ACLR
reset_n => address[1].ACLR
reset_n => address[2].ACLR
reset_n => address[3].ACLR
reset_n => address[4].ACLR
reset_n => total_cyc_cnt[0].ACLR
reset_n => total_cyc_cnt[1].ACLR
reset_n => total_cyc_cnt[2].ACLR
reset_n => total_cyc_cnt[3].ACLR
reset_n => total_cyc_cnt[4].ACLR
reset_n => total_cyc_cnt[5].ACLR
reset_n => sflag.ACLR
reset_n => delay_cnt2[0].ACLR
reset_n => delay_cnt2[1].ACLR
reset_n => delay_cnt2[2].ACLR
reset_n => delay_cnt2[3].ACLR
reset_n => delay_cnt2[4].ACLR
reset_n => delay_cnt2[5].ACLR
reset_n => delay_cnt2[6].ACLR
reset_n => delay_cnt2[7].ACLR
reset_n => delay_cnt2[8].ACLR
reset_n => delay_cnt2[9].ACLR
reset_n => delay_cnt2[10].ACLR
reset_n => delay_cnt2[11].ACLR
reset_n => delay_cnt2[12].ACLR
reset_n => delay_cnt2[13].ACLR
reset_n => delay_cnt2[14].ACLR
reset_n => delay_cnt2[15].ACLR
reset_n => delay_cnt2[16].ACLR
reset_n => delay_cnt2[17].ACLR
reset_n => delay_cnt2[18].ACLR
reset_n => delay_cnt2[19].ACLR
reset_n => delay_cnt2[20].ACLR
reset_n => delay_cnt2[21].ACLR
reset_n => delay_cnt2[22].ACLR
reset_n => delay_cnt2[23].ACLR
reset_n => delay_cnt2[24].ACLR
reset_n => delay_cnt2[25].ACLR
reset_n => delay_cnt2[26].ACLR
reset_n => delay_cnt2[27].ACLR
reset_n => delay_cnt2[28].ACLR
reset_n => delay_cnt2[29].ACLR
reset_n => delay_cnt2[30].ACLR
reset_n => delay_cnt2[31].ACLR
reset_n => FIFO_data[0].ACLR
reset_n => FIFO_data[1].ACLR
reset_n => FIFO_data[2].ACLR
reset_n => FIFO_data[3].ACLR
reset_n => FIFO_data[4].ACLR
reset_n => FIFO_data[5].ACLR
reset_n => FIFO_data[6].ACLR
reset_n => FIFO_data[7].ACLR
reset_n => AD_wr_en.ACLR
reset_n => times[0].ACLR
reset_n => times[1].ACLR
reset_n => times[2].ACLR
reset_n => times[3].ACLR
reset_n => times[4].ACLR
reset_n => times[5].ACLR
reset_n => times[6].ACLR
reset_n => times[7].ACLR
reset_n => state~4.DATAIN
flag => state.OUTPUTSELECT
flag => state.OUTPUTSELECT
data_out[0] => FIFO_data.DATAB
data_out[1] => FIFO_data.DATAB
data_out[2] => FIFO_data.DATAB
data_out[3] => FIFO_data.DATAB
data_out[4] => FIFO_data.DATAB
data_out[5] => FIFO_data.DATAB
data_out[6] => FIFO_data.DATAB
data_out[7] => FIFO_data.DATAB
addr[0] <= address[0].DB_MAX_OUTPUT_PORT_TYPE
addr[1] <= address[1].DB_MAX_OUTPUT_PORT_TYPE
addr[2] <= address[2].DB_MAX_OUTPUT_PORT_TYPE
addr[3] <= address[3].DB_MAX_OUTPUT_PORT_TYPE
addr[4] <= address[4].DB_MAX_OUTPUT_PORT_TYPE
rdreq => rdreq.IN1
empty <= AD_FIFO:AD_FIFO_i.empty
full <= AD_FIFO:AD_FIFO_i.full
q[0] <= AD_FIFO:AD_FIFO_i.q
q[1] <= AD_FIFO:AD_FIFO_i.q
q[2] <= AD_FIFO:AD_FIFO_i.q
q[3] <= AD_FIFO:AD_FIFO_i.q
q[4] <= AD_FIFO:AD_FIFO_i.q
q[5] <= AD_FIFO:AD_FIFO_i.q
q[6] <= AD_FIFO:AD_FIFO_i.q
q[7] <= AD_FIFO:AD_FIFO_i.q
SS_state[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
SS_state[1] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
SS_state[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
SS_state[3] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
rdreq => rdreq.IN1
wrreq => wrreq.IN1
empty <= scfifo:scfifo_component.empty
full <= scfifo:scfifo_component.full
q[0] <= scfifo:scfifo_component.q
q[1] <= scfifo:scfifo_component.q
q[2] <= scfifo:scfifo_component.q
q[3] <= scfifo:scfifo_component.q
q[4] <= scfifo:scfifo_component.q
q[5] <= scfifo:scfifo_component.q
q[6] <= scfifo:scfifo_component.q
q[7] <= scfifo:scfifo_component.q
usedw[0] <= scfifo:scfifo_component.usedw
usedw[1] <= scfifo:scfifo_component.usedw
usedw[2] <= scfifo:scfifo_component.usedw
usedw[3] <= scfifo:scfifo_component.usedw
usedw[4] <= scfifo:scfifo_component.usedw
usedw[5] <= scfifo:scfifo_component.usedw
usedw[6] <= scfifo:scfifo_component.usedw
usedw[7] <= scfifo:scfifo_component.usedw
usedw[8] <= scfifo:scfifo_component.usedw
usedw[9] <= scfifo:scfifo_component.usedw
usedw[10] <= scfifo:scfifo_component.usedw
usedw[11] <= scfifo:scfifo_component.usedw


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component
data[0] => scfifo_ep31:auto_generated.data[0]
data[1] => scfifo_ep31:auto_generated.data[1]
data[2] => scfifo_ep31:auto_generated.data[2]
data[3] => scfifo_ep31:auto_generated.data[3]
data[4] => scfifo_ep31:auto_generated.data[4]
data[5] => scfifo_ep31:auto_generated.data[5]
data[6] => scfifo_ep31:auto_generated.data[6]
data[7] => scfifo_ep31:auto_generated.data[7]
q[0] <= scfifo_ep31:auto_generated.q[0]
q[1] <= scfifo_ep31:auto_generated.q[1]
q[2] <= scfifo_ep31:auto_generated.q[2]
q[3] <= scfifo_ep31:auto_generated.q[3]
q[4] <= scfifo_ep31:auto_generated.q[4]
q[5] <= scfifo_ep31:auto_generated.q[5]
q[6] <= scfifo_ep31:auto_generated.q[6]
q[7] <= scfifo_ep31:auto_generated.q[7]
wrreq => scfifo_ep31:auto_generated.wrreq
rdreq => scfifo_ep31:auto_generated.rdreq
clock => scfifo_ep31:auto_generated.clock
aclr => ~NO_FANOUT~
sclr => ~NO_FANOUT~
empty <= scfifo_ep31:auto_generated.empty
full <= scfifo_ep31:auto_generated.full
almost_full <= <GND>
almost_empty <= <GND>
usedw[0] <= scfifo_ep31:auto_generated.usedw[0]
usedw[1] <= scfifo_ep31:auto_generated.usedw[1]
usedw[2] <= scfifo_ep31:auto_generated.usedw[2]
usedw[3] <= scfifo_ep31:auto_generated.usedw[3]
usedw[4] <= scfifo_ep31:auto_generated.usedw[4]
usedw[5] <= scfifo_ep31:auto_generated.usedw[5]
usedw[6] <= scfifo_ep31:auto_generated.usedw[6]
usedw[7] <= scfifo_ep31:auto_generated.usedw[7]
usedw[8] <= scfifo_ep31:auto_generated.usedw[8]
usedw[9] <= scfifo_ep31:auto_generated.usedw[9]
usedw[10] <= scfifo_ep31:auto_generated.usedw[10]
usedw[11] <= scfifo_ep31:auto_generated.usedw[11]


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated
clock => a_dpfifo_lv31:dpfifo.clock
data[0] => a_dpfifo_lv31:dpfifo.data[0]
data[1] => a_dpfifo_lv31:dpfifo.data[1]
data[2] => a_dpfifo_lv31:dpfifo.data[2]
data[3] => a_dpfifo_lv31:dpfifo.data[3]
data[4] => a_dpfifo_lv31:dpfifo.data[4]
data[5] => a_dpfifo_lv31:dpfifo.data[5]
data[6] => a_dpfifo_lv31:dpfifo.data[6]
data[7] => a_dpfifo_lv31:dpfifo.data[7]
empty <= a_dpfifo_lv31:dpfifo.empty
full <= a_dpfifo_lv31:dpfifo.full
q[0] <= a_dpfifo_lv31:dpfifo.q[0]
q[1] <= a_dpfifo_lv31:dpfifo.q[1]
q[2] <= a_dpfifo_lv31:dpfifo.q[2]
q[3] <= a_dpfifo_lv31:dpfifo.q[3]
q[4] <= a_dpfifo_lv31:dpfifo.q[4]
q[5] <= a_dpfifo_lv31:dpfifo.q[5]
q[6] <= a_dpfifo_lv31:dpfifo.q[6]
q[7] <= a_dpfifo_lv31:dpfifo.q[7]
rdreq => a_dpfifo_lv31:dpfifo.rreq
usedw[0] <= a_dpfifo_lv31:dpfifo.usedw[0]
usedw[1] <= a_dpfifo_lv31:dpfifo.usedw[1]
usedw[2] <= a_dpfifo_lv31:dpfifo.usedw[2]
usedw[3] <= a_dpfifo_lv31:dpfifo.usedw[3]
usedw[4] <= a_dpfifo_lv31:dpfifo.usedw[4]
usedw[5] <= a_dpfifo_lv31:dpfifo.usedw[5]
usedw[6] <= a_dpfifo_lv31:dpfifo.usedw[6]
usedw[7] <= a_dpfifo_lv31:dpfifo.usedw[7]
usedw[8] <= a_dpfifo_lv31:dpfifo.usedw[8]
usedw[9] <= a_dpfifo_lv31:dpfifo.usedw[9]
usedw[10] <= a_dpfifo_lv31:dpfifo.usedw[10]
usedw[11] <= a_dpfifo_lv31:dpfifo.usedw[11]
wrreq => a_dpfifo_lv31:dpfifo.wreq


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated|a_dpfifo_lv31:dpfifo
clock => a_fefifo_1bf:fifo_state.clock
clock => dpram_f811:FIFOram.inclock
clock => dpram_f811:FIFOram.outclock
clock => cntr_epb:rd_ptr_count.clock
clock => cntr_epb:wr_ptr.clock
data[0] => dpram_f811:FIFOram.data[0]
data[1] => dpram_f811:FIFOram.data[1]
data[2] => dpram_f811:FIFOram.data[2]
data[3] => dpram_f811:FIFOram.data[3]
data[4] => dpram_f811:FIFOram.data[4]
data[5] => dpram_f811:FIFOram.data[5]
data[6] => dpram_f811:FIFOram.data[6]
data[7] => dpram_f811:FIFOram.data[7]
empty <= a_fefifo_1bf:fifo_state.empty
full <= a_fefifo_1bf:fifo_state.full
q[0] <= dpram_f811:FIFOram.q[0]
q[1] <= dpram_f811:FIFOram.q[1]
q[2] <= dpram_f811:FIFOram.q[2]
q[3] <= dpram_f811:FIFOram.q[3]
q[4] <= dpram_f811:FIFOram.q[4]
q[5] <= dpram_f811:FIFOram.q[5]
q[6] <= dpram_f811:FIFOram.q[6]
q[7] <= dpram_f811:FIFOram.q[7]
rreq => a_fefifo_1bf:fifo_state.rreq
rreq => valid_rreq.IN0
sclr => a_fefifo_1bf:fifo_state.sclr
sclr => _.IN1
sclr => _.IN0
sclr => cntr_epb:rd_ptr_count.sclr
sclr => cntr_epb:wr_ptr.sclr
usedw[0] <= a_fefifo_1bf:fifo_state.usedw_out[0]
usedw[1] <= a_fefifo_1bf:fifo_state.usedw_out[1]
usedw[2] <= a_fefifo_1bf:fifo_state.usedw_out[2]
usedw[3] <= a_fefifo_1bf:fifo_state.usedw_out[3]
usedw[4] <= a_fefifo_1bf:fifo_state.usedw_out[4]
usedw[5] <= a_fefifo_1bf:fifo_state.usedw_out[5]
usedw[6] <= a_fefifo_1bf:fifo_state.usedw_out[6]
usedw[7] <= a_fefifo_1bf:fifo_state.usedw_out[7]
usedw[8] <= a_fefifo_1bf:fifo_state.usedw_out[8]
usedw[9] <= a_fefifo_1bf:fifo_state.usedw_out[9]
usedw[10] <= a_fefifo_1bf:fifo_state.usedw_out[10]
usedw[11] <= a_fefifo_1bf:fifo_state.usedw_out[11]
wreq => a_fefifo_1bf:fifo_state.wreq
wreq => valid_wreq.IN0


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated|a_dpfifo_lv31:dpfifo|a_fefifo_1bf:fifo_state
aclr => b_full.IN0
aclr => b_non_empty.IN0
aclr => cntr_qp7:count_usedw.aclr
clock => cntr_qp7:count_usedw.clock
clock => b_full.CLK
clock => b_non_empty.CLK
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= b_full.DB_MAX_OUTPUT_PORT_TYPE
rreq => _.IN1
rreq => _.IN0
rreq => _.IN1
rreq => valid_rreq.IN0
sclr => _.IN0
sclr => _.IN0
sclr => _.IN1
sclr => _.IN0
sclr => _.IN0
sclr => cntr_qp7:count_usedw.sclr
usedw_out[0] <= usedw[0].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[1] <= usedw[1].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[2] <= usedw[2].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[3] <= usedw[3].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[4] <= usedw[4].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[5] <= usedw[5].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[6] <= usedw[6].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[7] <= usedw[7].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[8] <= usedw[8].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[9] <= usedw[9].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[10] <= usedw[10].DB_MAX_OUTPUT_PORT_TYPE
usedw_out[11] <= usedw[11].DB_MAX_OUTPUT_PORT_TYPE
wreq => _.IN1
wreq => _.IN1
wreq => _.IN0
wreq => valid_wreq.IN0


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated|a_dpfifo_lv31:dpfifo|a_fefifo_1bf:fifo_state|cntr_qp7:count_usedw
aclr => counter_reg_bit[11].IN0
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0
updown => counter_comb_bita0.DATAB
updown => counter_comb_bita1.DATAB
updown => counter_comb_bita2.DATAB
updown => counter_comb_bita3.DATAB
updown => counter_comb_bita4.DATAB
updown => counter_comb_bita5.DATAB
updown => counter_comb_bita6.DATAB
updown => counter_comb_bita7.DATAB
updown => counter_comb_bita8.DATAB
updown => counter_comb_bita9.DATAB
updown => counter_comb_bita10.DATAB
updown => counter_comb_bita11.DATAB


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated|a_dpfifo_lv31:dpfifo|dpram_f811:FIFOram
data[0] => altsyncram_g3k1:altsyncram1.data_a[0]
data[1] => altsyncram_g3k1:altsyncram1.data_a[1]
data[2] => altsyncram_g3k1:altsyncram1.data_a[2]
data[3] => altsyncram_g3k1:altsyncram1.data_a[3]
data[4] => altsyncram_g3k1:altsyncram1.data_a[4]
data[5] => altsyncram_g3k1:altsyncram1.data_a[5]
data[6] => altsyncram_g3k1:altsyncram1.data_a[6]
data[7] => altsyncram_g3k1:altsyncram1.data_a[7]
inclock => altsyncram_g3k1:altsyncram1.clock0
outclock => altsyncram_g3k1:altsyncram1.clock1
outclocken => altsyncram_g3k1:altsyncram1.clocken1
q[0] <= altsyncram_g3k1:altsyncram1.q_b[0]
q[1] <= altsyncram_g3k1:altsyncram1.q_b[1]
q[2] <= altsyncram_g3k1:altsyncram1.q_b[2]
q[3] <= altsyncram_g3k1:altsyncram1.q_b[3]
q[4] <= altsyncram_g3k1:altsyncram1.q_b[4]
q[5] <= altsyncram_g3k1:altsyncram1.q_b[5]
q[6] <= altsyncram_g3k1:altsyncram1.q_b[6]
q[7] <= altsyncram_g3k1:altsyncram1.q_b[7]
rdaddress[0] => altsyncram_g3k1:altsyncram1.address_b[0]
rdaddress[1] => altsyncram_g3k1:altsyncram1.address_b[1]
rdaddress[2] => altsyncram_g3k1:altsyncram1.address_b[2]
rdaddress[3] => altsyncram_g3k1:altsyncram1.address_b[3]
rdaddress[4] => altsyncram_g3k1:altsyncram1.address_b[4]
rdaddress[5] => altsyncram_g3k1:altsyncram1.address_b[5]
rdaddress[6] => altsyncram_g3k1:altsyncram1.address_b[6]
rdaddress[7] => altsyncram_g3k1:altsyncram1.address_b[7]
rdaddress[8] => altsyncram_g3k1:altsyncram1.address_b[8]
rdaddress[9] => altsyncram_g3k1:altsyncram1.address_b[9]
rdaddress[10] => altsyncram_g3k1:altsyncram1.address_b[10]
rdaddress[11] => altsyncram_g3k1:altsyncram1.address_b[11]
wraddress[0] => altsyncram_g3k1:altsyncram1.address_a[0]
wraddress[1] => altsyncram_g3k1:altsyncram1.address_a[1]
wraddress[2] => altsyncram_g3k1:altsyncram1.address_a[2]
wraddress[3] => altsyncram_g3k1:altsyncram1.address_a[3]
wraddress[4] => altsyncram_g3k1:altsyncram1.address_a[4]
wraddress[5] => altsyncram_g3k1:altsyncram1.address_a[5]
wraddress[6] => altsyncram_g3k1:altsyncram1.address_a[6]
wraddress[7] => altsyncram_g3k1:altsyncram1.address_a[7]
wraddress[8] => altsyncram_g3k1:altsyncram1.address_a[8]
wraddress[9] => altsyncram_g3k1:altsyncram1.address_a[9]
wraddress[10] => altsyncram_g3k1:altsyncram1.address_a[10]
wraddress[11] => altsyncram_g3k1:altsyncram1.address_a[11]
wren => altsyncram_g3k1:altsyncram1.wren_a


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated|a_dpfifo_lv31:dpfifo|dpram_f811:FIFOram|altsyncram_g3k1:altsyncram1
address_a[0] => ram_block2a0.PORTAADDR
address_a[0] => ram_block2a1.PORTAADDR
address_a[0] => ram_block2a2.PORTAADDR
address_a[0] => ram_block2a3.PORTAADDR
address_a[0] => ram_block2a4.PORTAADDR
address_a[0] => ram_block2a5.PORTAADDR
address_a[0] => ram_block2a6.PORTAADDR
address_a[0] => ram_block2a7.PORTAADDR
address_a[1] => ram_block2a0.PORTAADDR1
address_a[1] => ram_block2a1.PORTAADDR1
address_a[1] => ram_block2a2.PORTAADDR1
address_a[1] => ram_block2a3.PORTAADDR1
address_a[1] => ram_block2a4.PORTAADDR1
address_a[1] => ram_block2a5.PORTAADDR1
address_a[1] => ram_block2a6.PORTAADDR1
address_a[1] => ram_block2a7.PORTAADDR1
address_a[2] => ram_block2a0.PORTAADDR2
address_a[2] => ram_block2a1.PORTAADDR2
address_a[2] => ram_block2a2.PORTAADDR2
address_a[2] => ram_block2a3.PORTAADDR2
address_a[2] => ram_block2a4.PORTAADDR2
address_a[2] => ram_block2a5.PORTAADDR2
address_a[2] => ram_block2a6.PORTAADDR2
address_a[2] => ram_block2a7.PORTAADDR2
address_a[3] => ram_block2a0.PORTAADDR3
address_a[3] => ram_block2a1.PORTAADDR3
address_a[3] => ram_block2a2.PORTAADDR3
address_a[3] => ram_block2a3.PORTAADDR3
address_a[3] => ram_block2a4.PORTAADDR3
address_a[3] => ram_block2a5.PORTAADDR3
address_a[3] => ram_block2a6.PORTAADDR3
address_a[3] => ram_block2a7.PORTAADDR3
address_a[4] => ram_block2a0.PORTAADDR4
address_a[4] => ram_block2a1.PORTAADDR4
address_a[4] => ram_block2a2.PORTAADDR4
address_a[4] => ram_block2a3.PORTAADDR4
address_a[4] => ram_block2a4.PORTAADDR4
address_a[4] => ram_block2a5.PORTAADDR4
address_a[4] => ram_block2a6.PORTAADDR4
address_a[4] => ram_block2a7.PORTAADDR4
address_a[5] => ram_block2a0.PORTAADDR5
address_a[5] => ram_block2a1.PORTAADDR5
address_a[5] => ram_block2a2.PORTAADDR5
address_a[5] => ram_block2a3.PORTAADDR5
address_a[5] => ram_block2a4.PORTAADDR5
address_a[5] => ram_block2a5.PORTAADDR5
address_a[5] => ram_block2a6.PORTAADDR5
address_a[5] => ram_block2a7.PORTAADDR5
address_a[6] => ram_block2a0.PORTAADDR6
address_a[6] => ram_block2a1.PORTAADDR6
address_a[6] => ram_block2a2.PORTAADDR6
address_a[6] => ram_block2a3.PORTAADDR6
address_a[6] => ram_block2a4.PORTAADDR6
address_a[6] => ram_block2a5.PORTAADDR6
address_a[6] => ram_block2a6.PORTAADDR6
address_a[6] => ram_block2a7.PORTAADDR6
address_a[7] => ram_block2a0.PORTAADDR7
address_a[7] => ram_block2a1.PORTAADDR7
address_a[7] => ram_block2a2.PORTAADDR7
address_a[7] => ram_block2a3.PORTAADDR7
address_a[7] => ram_block2a4.PORTAADDR7
address_a[7] => ram_block2a5.PORTAADDR7
address_a[7] => ram_block2a6.PORTAADDR7
address_a[7] => ram_block2a7.PORTAADDR7
address_a[8] => ram_block2a0.PORTAADDR8
address_a[8] => ram_block2a1.PORTAADDR8
address_a[8] => ram_block2a2.PORTAADDR8
address_a[8] => ram_block2a3.PORTAADDR8
address_a[8] => ram_block2a4.PORTAADDR8
address_a[8] => ram_block2a5.PORTAADDR8
address_a[8] => ram_block2a6.PORTAADDR8
address_a[8] => ram_block2a7.PORTAADDR8
address_a[9] => ram_block2a0.PORTAADDR9
address_a[9] => ram_block2a1.PORTAADDR9
address_a[9] => ram_block2a2.PORTAADDR9
address_a[9] => ram_block2a3.PORTAADDR9
address_a[9] => ram_block2a4.PORTAADDR9
address_a[9] => ram_block2a5.PORTAADDR9
address_a[9] => ram_block2a6.PORTAADDR9
address_a[9] => ram_block2a7.PORTAADDR9
address_a[10] => ram_block2a0.PORTAADDR10
address_a[10] => ram_block2a1.PORTAADDR10
address_a[10] => ram_block2a2.PORTAADDR10
address_a[10] => ram_block2a3.PORTAADDR10
address_a[10] => ram_block2a4.PORTAADDR10
address_a[10] => ram_block2a5.PORTAADDR10
address_a[10] => ram_block2a6.PORTAADDR10
address_a[10] => ram_block2a7.PORTAADDR10
address_a[11] => ram_block2a0.PORTAADDR11
address_a[11] => ram_block2a1.PORTAADDR11
address_a[11] => ram_block2a2.PORTAADDR11
address_a[11] => ram_block2a3.PORTAADDR11
address_a[11] => ram_block2a4.PORTAADDR11
address_a[11] => ram_block2a5.PORTAADDR11
address_a[11] => ram_block2a6.PORTAADDR11
address_a[11] => ram_block2a7.PORTAADDR11
address_b[0] => ram_block2a0.PORTBADDR
address_b[0] => ram_block2a1.PORTBADDR
address_b[0] => ram_block2a2.PORTBADDR
address_b[0] => ram_block2a3.PORTBADDR
address_b[0] => ram_block2a4.PORTBADDR
address_b[0] => ram_block2a5.PORTBADDR
address_b[0] => ram_block2a6.PORTBADDR
address_b[0] => ram_block2a7.PORTBADDR
address_b[1] => ram_block2a0.PORTBADDR1
address_b[1] => ram_block2a1.PORTBADDR1
address_b[1] => ram_block2a2.PORTBADDR1
address_b[1] => ram_block2a3.PORTBADDR1
address_b[1] => ram_block2a4.PORTBADDR1
address_b[1] => ram_block2a5.PORTBADDR1
address_b[1] => ram_block2a6.PORTBADDR1
address_b[1] => ram_block2a7.PORTBADDR1
address_b[2] => ram_block2a0.PORTBADDR2
address_b[2] => ram_block2a1.PORTBADDR2
address_b[2] => ram_block2a2.PORTBADDR2
address_b[2] => ram_block2a3.PORTBADDR2
address_b[2] => ram_block2a4.PORTBADDR2
address_b[2] => ram_block2a5.PORTBADDR2
address_b[2] => ram_block2a6.PORTBADDR2
address_b[2] => ram_block2a7.PORTBADDR2
address_b[3] => ram_block2a0.PORTBADDR3
address_b[3] => ram_block2a1.PORTBADDR3
address_b[3] => ram_block2a2.PORTBADDR3
address_b[3] => ram_block2a3.PORTBADDR3
address_b[3] => ram_block2a4.PORTBADDR3
address_b[3] => ram_block2a5.PORTBADDR3
address_b[3] => ram_block2a6.PORTBADDR3
address_b[3] => ram_block2a7.PORTBADDR3
address_b[4] => ram_block2a0.PORTBADDR4
address_b[4] => ram_block2a1.PORTBADDR4
address_b[4] => ram_block2a2.PORTBADDR4
address_b[4] => ram_block2a3.PORTBADDR4
address_b[4] => ram_block2a4.PORTBADDR4
address_b[4] => ram_block2a5.PORTBADDR4
address_b[4] => ram_block2a6.PORTBADDR4
address_b[4] => ram_block2a7.PORTBADDR4
address_b[5] => ram_block2a0.PORTBADDR5
address_b[5] => ram_block2a1.PORTBADDR5
address_b[5] => ram_block2a2.PORTBADDR5
address_b[5] => ram_block2a3.PORTBADDR5
address_b[5] => ram_block2a4.PORTBADDR5
address_b[5] => ram_block2a5.PORTBADDR5
address_b[5] => ram_block2a6.PORTBADDR5
address_b[5] => ram_block2a7.PORTBADDR5
address_b[6] => ram_block2a0.PORTBADDR6
address_b[6] => ram_block2a1.PORTBADDR6
address_b[6] => ram_block2a2.PORTBADDR6
address_b[6] => ram_block2a3.PORTBADDR6
address_b[6] => ram_block2a4.PORTBADDR6
address_b[6] => ram_block2a5.PORTBADDR6
address_b[6] => ram_block2a6.PORTBADDR6
address_b[6] => ram_block2a7.PORTBADDR6
address_b[7] => ram_block2a0.PORTBADDR7
address_b[7] => ram_block2a1.PORTBADDR7
address_b[7] => ram_block2a2.PORTBADDR7
address_b[7] => ram_block2a3.PORTBADDR7
address_b[7] => ram_block2a4.PORTBADDR7
address_b[7] => ram_block2a5.PORTBADDR7
address_b[7] => ram_block2a6.PORTBADDR7
address_b[7] => ram_block2a7.PORTBADDR7
address_b[8] => ram_block2a0.PORTBADDR8
address_b[8] => ram_block2a1.PORTBADDR8
address_b[8] => ram_block2a2.PORTBADDR8
address_b[8] => ram_block2a3.PORTBADDR8
address_b[8] => ram_block2a4.PORTBADDR8
address_b[8] => ram_block2a5.PORTBADDR8
address_b[8] => ram_block2a6.PORTBADDR8
address_b[8] => ram_block2a7.PORTBADDR8
address_b[9] => ram_block2a0.PORTBADDR9
address_b[9] => ram_block2a1.PORTBADDR9
address_b[9] => ram_block2a2.PORTBADDR9
address_b[9] => ram_block2a3.PORTBADDR9
address_b[9] => ram_block2a4.PORTBADDR9
address_b[9] => ram_block2a5.PORTBADDR9
address_b[9] => ram_block2a6.PORTBADDR9
address_b[9] => ram_block2a7.PORTBADDR9
address_b[10] => ram_block2a0.PORTBADDR10
address_b[10] => ram_block2a1.PORTBADDR10
address_b[10] => ram_block2a2.PORTBADDR10
address_b[10] => ram_block2a3.PORTBADDR10
address_b[10] => ram_block2a4.PORTBADDR10
address_b[10] => ram_block2a5.PORTBADDR10
address_b[10] => ram_block2a6.PORTBADDR10
address_b[10] => ram_block2a7.PORTBADDR10
address_b[11] => ram_block2a0.PORTBADDR11
address_b[11] => ram_block2a1.PORTBADDR11
address_b[11] => ram_block2a2.PORTBADDR11
address_b[11] => ram_block2a3.PORTBADDR11
address_b[11] => ram_block2a4.PORTBADDR11
address_b[11] => ram_block2a5.PORTBADDR11
address_b[11] => ram_block2a6.PORTBADDR11
address_b[11] => ram_block2a7.PORTBADDR11
clock0 => ram_block2a0.CLK0
clock0 => ram_block2a1.CLK0
clock0 => ram_block2a2.CLK0
clock0 => ram_block2a3.CLK0
clock0 => ram_block2a4.CLK0
clock0 => ram_block2a5.CLK0
clock0 => ram_block2a6.CLK0
clock0 => ram_block2a7.CLK0
clock1 => ram_block2a0.CLK1
clock1 => ram_block2a1.CLK1
clock1 => ram_block2a2.CLK1
clock1 => ram_block2a3.CLK1
clock1 => ram_block2a4.CLK1
clock1 => ram_block2a5.CLK1
clock1 => ram_block2a6.CLK1
clock1 => ram_block2a7.CLK1
clocken1 => ram_block2a0.ENA1
clocken1 => ram_block2a1.ENA1
clocken1 => ram_block2a2.ENA1
clocken1 => ram_block2a3.ENA1
clocken1 => ram_block2a4.ENA1
clocken1 => ram_block2a5.ENA1
clocken1 => ram_block2a6.ENA1
clocken1 => ram_block2a7.ENA1
data_a[0] => ram_block2a0.PORTADATAIN
data_a[1] => ram_block2a1.PORTADATAIN
data_a[2] => ram_block2a2.PORTADATAIN
data_a[3] => ram_block2a3.PORTADATAIN
data_a[4] => ram_block2a4.PORTADATAIN
data_a[5] => ram_block2a5.PORTADATAIN
data_a[6] => ram_block2a6.PORTADATAIN
data_a[7] => ram_block2a7.PORTADATAIN
q_b[0] <= ram_block2a0.PORTBDATAOUT
q_b[1] <= ram_block2a1.PORTBDATAOUT
q_b[2] <= ram_block2a2.PORTBDATAOUT
q_b[3] <= ram_block2a3.PORTBDATAOUT
q_b[4] <= ram_block2a4.PORTBDATAOUT
q_b[5] <= ram_block2a5.PORTBDATAOUT
q_b[6] <= ram_block2a6.PORTBDATAOUT
q_b[7] <= ram_block2a7.PORTBDATAOUT
wren_a => ram_block2a0.PORTAWE
wren_a => ram_block2a0.ENA0
wren_a => ram_block2a1.PORTAWE
wren_a => ram_block2a1.ENA0
wren_a => ram_block2a2.PORTAWE
wren_a => ram_block2a2.ENA0
wren_a => ram_block2a3.PORTAWE
wren_a => ram_block2a3.ENA0
wren_a => ram_block2a4.PORTAWE
wren_a => ram_block2a4.ENA0
wren_a => ram_block2a5.PORTAWE
wren_a => ram_block2a5.ENA0
wren_a => ram_block2a6.PORTAWE
wren_a => ram_block2a6.ENA0
wren_a => ram_block2a7.PORTAWE
wren_a => ram_block2a7.ENA0


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated|a_dpfifo_lv31:dpfifo|cntr_epb:rd_ptr_count
aclr => counter_reg_bit[11].IN0
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|demonstrate|switch_ctrl:i_switch_ctrl|AD_FIFO:AD_FIFO_i|scfifo:scfifo_component|scfifo_ep31:auto_generated|a_dpfifo_lv31:dpfifo|cntr_epb:wr_ptr
aclr => counter_reg_bit[11].IN0
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|demonstrate|speed_select:i_speed_select
clk => clk_bps_r.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => clk_bps_r.ACLR
clk_bps <= clk_bps_r.DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|my_uart_tx:i_my_uart_tx
clk => rs232_tx_r.CLK
clk => num[0].CLK
clk => num[1].CLK
clk => num[2].CLK
clk => num[3].CLK
clk => tx_en.CLK
clk => tx_data[0].CLK
clk => tx_data[1].CLK
clk => tx_data[2].CLK
clk => tx_data[3].CLK
clk => tx_data[4].CLK
clk => tx_data[5].CLK
clk => tx_data[6].CLK
clk => tx_data[7].CLK
clk => rd_en~reg0.CLK
clk => wait_cnt[0].CLK
clk => wait_cnt[1].CLK
clk => wait_cnt[2].CLK
clk => wait_cnt[3].CLK
clk => wait_cnt[4].CLK
clk => wait_cnt[5].CLK
clk => wait_cnt[6].CLK
clk => wait_cnt[7].CLK
clk => wait_cnt[8].CLK
clk => wait_cnt[9].CLK
clk => wait_cnt[10].CLK
clk => wait_cnt[11].CLK
clk => wait_cnt[12].CLK
clk => wait_cnt[13].CLK
clk => wait_cnt[14].CLK
clk => wait_cnt[15].CLK
clk => wait_cnt[16].CLK
clk => wait_cnt[17].CLK
clk => wait_cnt[18].CLK
clk => wait_cnt[19].CLK
clk => wait_cnt[20].CLK
clk => wait_cnt[21].CLK
clk => wait_cnt[22].CLK
clk => wait_cnt[23].CLK
clk => wait_cnt[24].CLK
clk => wait_cnt[25].CLK
clk => wait_cnt[26].CLK
clk => wait_cnt[27].CLK
clk => wait_cnt[28].CLK
clk => wait_cnt[29].CLK
clk => wait_cnt[30].CLK
clk => wait_cnt[31].CLK
clk => state~1.DATAIN
rst_n => wait_cnt[0].ACLR
rst_n => wait_cnt[1].ACLR
rst_n => wait_cnt[2].ACLR
rst_n => wait_cnt[3].ACLR
rst_n => wait_cnt[4].ACLR
rst_n => wait_cnt[5].ACLR
rst_n => wait_cnt[6].ACLR
rst_n => wait_cnt[7].ACLR
rst_n => wait_cnt[8].ACLR
rst_n => wait_cnt[9].ACLR
rst_n => wait_cnt[10].ACLR
rst_n => wait_cnt[11].ACLR
rst_n => wait_cnt[12].ACLR
rst_n => wait_cnt[13].ACLR
rst_n => wait_cnt[14].ACLR
rst_n => wait_cnt[15].ACLR
rst_n => wait_cnt[16].ACLR
rst_n => wait_cnt[17].ACLR
rst_n => wait_cnt[18].ACLR
rst_n => wait_cnt[19].ACLR
rst_n => wait_cnt[20].ACLR
rst_n => wait_cnt[21].ACLR
rst_n => wait_cnt[22].ACLR
rst_n => wait_cnt[23].ACLR
rst_n => wait_cnt[24].ACLR
rst_n => wait_cnt[25].ACLR
rst_n => wait_cnt[26].ACLR
rst_n => wait_cnt[27].ACLR
rst_n => wait_cnt[28].ACLR
rst_n => wait_cnt[29].ACLR
rst_n => wait_cnt[30].ACLR
rst_n => wait_cnt[31].ACLR
rst_n => rs232_tx_r.PRESET
rst_n => num[0].ACLR
rst_n => num[1].ACLR
rst_n => num[2].ACLR
rst_n => num[3].ACLR
rst_n => tx_data[0].ACLR
rst_n => tx_data[1].ACLR
rst_n => tx_data[2].ACLR
rst_n => tx_data[3].ACLR
rst_n => tx_data[4].ACLR
rst_n => tx_data[5].ACLR
rst_n => tx_data[6].ACLR
rst_n => tx_data[7].ACLR
rst_n => tx_en.ACLR
rst_n => state~3.DATAIN
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => rs232_tx_r.OUTPUTSELECT
rd_data[0] => tx_data[0].DATAIN
rd_data[1] => tx_data[1].DATAIN
rd_data[2] => tx_data[2].DATAIN
rd_data[3] => tx_data[3].DATAIN
rd_data[4] => tx_data[4].DATAIN
rd_data[5] => tx_data[5].DATAIN
rd_data[6] => tx_data[6].DATAIN
rd_data[7] => tx_data[7].DATAIN
rd_en <= rd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty => Selector0.IN3
empty => state.DATAB
rs_tx <= rs232_tx_r.DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|max1452_top:max1452
clk => clk.IN2
rst_n => rst_n.IN2
rs_tx <= my_uart_tx:my_uart_tx.rs_tx
unlock <= <VCC>


|demonstrate|max1452_top:max1452|speed_select:speed_select
clk => clk_bps_r.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => clk_bps_r.ACLR
clk_bps <= clk_bps_r.DB_MAX_OUTPUT_PORT_TYPE


|demonstrate|max1452_top:max1452|my_uart_tx:my_uart_tx
clk => rs232_tx_r.CLK
clk => num[0].CLK
clk => num[1].CLK
clk => num[2].CLK
clk => num[3].CLK
clk => tx_en.CLK
clk => tx_data[0].CLK
clk => tx_data[1].CLK
clk => tx_data[2].CLK
clk => tx_data[3].CLK
clk => tx_data[4].CLK
clk => tx_data[5].CLK
clk => tx_data[6].CLK
clk => tx_data[7].CLK
clk => rd_en~reg0.CLK
clk => wait_cnt[0].CLK
clk => wait_cnt[1].CLK
clk => wait_cnt[2].CLK
clk => wait_cnt[3].CLK
clk => wait_cnt[4].CLK
clk => wait_cnt[5].CLK
clk => wait_cnt[6].CLK
clk => wait_cnt[7].CLK
clk => wait_cnt[8].CLK
clk => wait_cnt[9].CLK
clk => wait_cnt[10].CLK
clk => wait_cnt[11].CLK
clk => wait_cnt[12].CLK
clk => wait_cnt[13].CLK
clk => wait_cnt[14].CLK
clk => wait_cnt[15].CLK
clk => wait_cnt[16].CLK
clk => wait_cnt[17].CLK
clk => wait_cnt[18].CLK
clk => wait_cnt[19].CLK
clk => wait_cnt[20].CLK
clk => wait_cnt[21].CLK
clk => wait_cnt[22].CLK
clk => wait_cnt[23].CLK
clk => wait_cnt[24].CLK
clk => wait_cnt[25].CLK
clk => wait_cnt[26].CLK
clk => wait_cnt[27].CLK
clk => wait_cnt[28].CLK
clk => wait_cnt[29].CLK
clk => wait_cnt[30].CLK
clk => wait_cnt[31].CLK
clk => state~1.DATAIN
rst_n => wait_cnt[0].ACLR
rst_n => wait_cnt[1].ACLR
rst_n => wait_cnt[2].ACLR
rst_n => wait_cnt[3].ACLR
rst_n => wait_cnt[4].ACLR
rst_n => wait_cnt[5].ACLR
rst_n => wait_cnt[6].ACLR
rst_n => wait_cnt[7].ACLR
rst_n => wait_cnt[8].ACLR
rst_n => wait_cnt[9].ACLR
rst_n => wait_cnt[10].ACLR
rst_n => wait_cnt[11].ACLR
rst_n => wait_cnt[12].ACLR
rst_n => wait_cnt[13].ACLR
rst_n => wait_cnt[14].ACLR
rst_n => wait_cnt[15].ACLR
rst_n => wait_cnt[16].ACLR
rst_n => wait_cnt[17].ACLR
rst_n => wait_cnt[18].ACLR
rst_n => wait_cnt[19].ACLR
rst_n => wait_cnt[20].ACLR
rst_n => wait_cnt[21].ACLR
rst_n => wait_cnt[22].ACLR
rst_n => wait_cnt[23].ACLR
rst_n => wait_cnt[24].ACLR
rst_n => wait_cnt[25].ACLR
rst_n => wait_cnt[26].ACLR
rst_n => wait_cnt[27].ACLR
rst_n => wait_cnt[28].ACLR
rst_n => wait_cnt[29].ACLR
rst_n => wait_cnt[30].ACLR
rst_n => wait_cnt[31].ACLR
rst_n => rs232_tx_r.PRESET
rst_n => num[0].ACLR
rst_n => num[1].ACLR
rst_n => num[2].ACLR
rst_n => num[3].ACLR
rst_n => tx_data[0].ACLR
rst_n => tx_data[1].ACLR
rst_n => tx_data[2].ACLR
rst_n => tx_data[3].ACLR
rst_n => tx_data[4].ACLR
rst_n => tx_data[5].ACLR
rst_n => tx_data[6].ACLR
rst_n => tx_data[7].ACLR
rst_n => tx_en.ACLR
rst_n => state~3.DATAIN
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => num.OUTPUTSELECT
clk_bps => rs232_tx_r.OUTPUTSELECT
rd_data[0] => tx_data[0].DATAIN
rd_data[1] => tx_data[1].DATAIN
rd_data[2] => tx_data[2].DATAIN
rd_data[3] => tx_data[3].DATAIN
rd_data[4] => tx_data[4].DATAIN
rd_data[5] => tx_data[5].DATAIN
rd_data[6] => tx_data[6].DATAIN
rd_data[7] => tx_data[7].DATAIN
rd_en <= rd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty => Selector0.IN3
empty => state.DATAB
rs_tx <= rs232_tx_r.DB_MAX_OUTPUT_PORT_TYPE


